(()=>{var e={830:()=>{let e=0;const t=document.querySelector(".projects .max-width"),o=document.querySelector(".carousel"),n=document.querySelector(".next"),s=document.querySelector(".pre"),c=document.querySelectorAll(".carousel .card").length;let r=t.clientWidth/1,i=1*r;function a(){r=t.clientWidth/1,i=1*r}function d(){o.style.transform=`translateX(${e}px)`}n.addEventListener("click",(function(){a();const t=c-(Math.abs(e)+1*r)/r;e-=t>=1?i:-r*(c-1),d()})),s.addEventListener("click",(function(){a();const t=Math.abs(e)/r;e+=t>=1?i:t*r,d()})),window.addEventListener("resize",(function(){e=0,d()}))}},t={};function o(n){if(t[n])return t[n].exports;var s=t[n]={exports:{}};return e[n](s,s.exports,o),s.exports}(()=>{"use strict";function e(e){return new Promise((t=>setTimeout(t,e)))}async function t(t,o){const n=t.split("");for(let s=0;s<t.length;s++)await e(100),n.pop(),o.innerText=n.join("")}async function n(t,o){const n=t.split("");for(let s=0;s<t.length;s++)await e(200),o.innerText+=n.shift()}async function s(e,o){for(const s of e)await n(s,o),await t(s,o);s(e,o)}const c=document.querySelectorAll(".wrapper"),r=document.querySelectorAll(".menu a"),i=document.querySelector(".navbar"),a=document.querySelector(".scroll-up-btn"),d=document.querySelector(".home-typed"),l=document.querySelector(".about-typed"),u=document.querySelector(".menu"),m=document.querySelectorAll(".menu-btn");function f(){const e=window.scrollY;var t;t=e,c.forEach((e=>{e.offsetTop<=t&&e.offsetTop+e.offsetHeight>t&&r.forEach((t=>{t.classList.remove("active"),e.getAttribute("id")===t.getAttribute("href").substring(1)&&t.classList.add("active")}))})),function(e){e>101&&!i.className.includes("sticky")?i.classList.add("sticky"):e<20&&i.classList.remove("sticky")}(e),function(e){e>500&&!i.className.includes("show")?a.classList.add("show"):e<500&&a.classList.remove("show")}(e)}function p(){window.scrollTo({top:0})}function y(e,t){const o=document.createElement("div");o.className="tooltip",o.innerText=t,document.body.append(o);const n=e.getBoundingClientRect();let s=n.left+(e.offsetWidth-o.offsetWidth)/2;const c=n.top+e.offsetHeight+5;s<0&&(s=0),o.style.left=`${s}px`,o.style.top=`${c}px`,setTimeout((()=>o.remove()),3e3)}window.addEventListener("DOMContentLoaded",(()=>{a.addEventListener("click",p),window.addEventListener("scroll",f),s(["CSS.","HTML.","JavaScript.","SASS","WebPack","GIT"],d),s(["hardworking.","persistent.","smart."],l),m.forEach((e=>{e.addEventListener("click",(()=>{u.classList.toggle("active")}))}))})),o(830);const h=document.querySelector("form"),v=document.querySelector("form button"),S=document.getElementById("name"),b=document.getElementById("email"),w=document.getElementById("subject"),g=document.getElementById("describe");h.addEventListener("submit",(e=>{e.preventDefault();const t={person:S.value,email:b.value,subject:w.value,describe:g.value,date:(new Date).toJSON()};var o;v.disabled=!0,v.classList.add("processed"),(o=t,fetch("https://form-portfolio-app-default-rtdb.firebaseio.com/feedback.json",{method:"POST",body:JSON.stringify(o),headers:{"Content-Type":"application/json"}}).then((e=>e.json()))).then((e=>{if(e.error)return h.reset(),v.disabled=!1,v.classList.remove("processed"),void y(v,"Something went wrong, please try again!");h.reset(),v.disabled=!1,v.classList.remove("processed"),y(v,"Success, thanks for the feedback!")})).catch((()=>{h.reset(),v.disabled=!1,v.classList.remove("processed"),y(v,"Something went wrong, please try again!")}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,